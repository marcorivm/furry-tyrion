	/~
	 Definición para el lenguaje Tyrion
	~/


	/~
	 Funciones
	~/
	[*
	// Aqui pueden ir funciones de javascript

	*]
	/~
	 Tokens
	~/

	/~
	 Ignorar espacios en blanco y comentarios
	~/
	!	' |\t|\r|\n|//[^\n]*\n'

	/~
	 Tokens, no hay distinción entre mayusculas y minúsculas
	~/
		"SI"
		"SINO"
		"HACER"
		"MIENTRAS"
		"REPETIR"
		"PORCADA"
		"EN"
		"FUNCION INICIO"		FINICIO
		"FUNCION"
		"RESPONDER"
		"PREGUNTAR"
		"DECIR"
		"ESCUCHAR"
		"NUMERO"				TNUMERO
		"LETRAS"				TLETRAS
		"LOGICO"				TLOGICO
		"MATRIZ"				TMATRIZ
		"RAIZ"
		"PI"
		"E"
		'{'
		'}'
		'\['
		'\]'
		';'
		','
		'='
		'!'
		'==|!=|<>|<=|>=|>|<'	OP_REL
		'\+'
		'\-'
		'/'
		'\*'
		'%'
		'\^'
		'\('
		'\)'
		'\|\|'
		'\&\&'

		"VERDADERO | FALSO" 	LOGICO
		'[a-z][a-zA-Z0-9_]*'	IDENTIFICADOR
		'\'([^\']|\'\')*\''		LETRAS								[* %match = %match.substr( 1, %match.length - 2 );
																	   %match = %match.replace( /''/g, "\'" );		*]
		'([0-9]*\.)?[0-9]+'		NUMERO
		;

	##
	Program:
			VarDecs FunctionDecs Inicio
			;
	Inicio:	FINICIO '(' ')' Bloque
			;

	Var:	VarDec '=' Exp ';'
			| VarDec ';'
			;
	VarDec: Tipo IDENTIFICADOR
			;
	VarDecs:
			VarDecs Var
			|
			;
	ParamOpt:
			Param
			|
			;
	Param:	Param ',' VarDec
			| VarDec
			;
	ArgsOpt:
			Args
			|
			;
	Args:	Args ',' Exp
			| Exp
			;

	Function:
			FUNCION Tipo IDENTIFICADOR '(' ParamOpt ')' Bloque
			| FUNCION IDENTIFICADOR '(' ParamOpt ')' Bloque
			;
	FunctionDecs:
			FunctionDecs Function
			|
			;

	Bloque:
			'{' Statements '}'
			;

Statements:	Statements Statement
			|
			;
Statement:	Var
			| Control
			| Asignacion
			| Regreso
			| FunctionCall ';'
			| SpecialFunctions
			| ';'
			;
	Asignacion:
			IDENTIFICADOR '=' Exp ';'
			;
	Regreso:
			RESPONDER Exp ';'
			;
	FunctionCall:
			IDENTIFICADOR '(' ArgsOpt ')'
			;
	SpecialFunctions:
			DECIR '(' Exp ')' ';'
			;
	Read:	ESCUCHAR '(' ')'
			| PREGUNTAR '(' Exp ')'
			;


	Control:
			If
			| While
			| Foreach
			| Dowhile
			;
	If:		SI '(' Exp ')' Bloque
			| SI '(' Exp ')' Bloque SINO Bloque
			| SI '(' Exp ')' Bloque SINO If
			;
	While:	MIENTRAS '(' Exp ')' Bloque
			;
	Foreach:
			PORCADA IDENTIFICADOR EN IDENTIFICADOR Bloque
			;
	Dowhile:
			HACER Bloque MIENTRAS '(' Exp ')' ';'
			;

	Tipo: 	TLETRAS
			| TNUMERO
			| TLOGICO
			| TMATRIZ
			;
	Matriz:	Matriz '[' Exp ']'
			| IDENTIFICADOR '[' Exp ']'
			;

	Exp:	Exp OP_REL ExpSum
			| ExpSum
			;
	ExpSum:	ExpSum '+' ExpMult
			| ExpSum '-' ExpMult
			| ExpSum '||' ExpMult
			| ExpMult
			;
	ExpMult:
			ExpMult '*' ExpVal
			| ExpMult '/' ExpVal
			| ExpMult '&&' ExpVal
			| ExpVal
			;
	ExpVal:	IDENTIFICADOR
			| NUMERO
			| LETRAS
			| LOGICO
			| Matriz
			| Read
			| PI
			| E
			| '(' Exp ')'
			| FunctionCall
			;

[*
var storageListener = function (e) {
    if (e.key == 'program-source') {
        saveInput(localStorage.getItem('program-source'));
    }
}
var saveInput = function(data) {
	var str = data;
	var error_cnt 	= 0;
	var error_off	= new Array();
	var error_la	= new Array();
	localStorage.removeItem('program-errors');
	if( ( error_cnt = __parse( str, error_off, error_la ) ) > 0 ) {
		var errors_str = ''
		for( i = 0; i < error_cnt; i++ ) {
			errors_str += "<p>Parse error near: <small><b>"
				+ str.substr( error_off[i], 30 ) + "</b></small>, expecting: <small><b><i>" + error_la[i].join() + "</i></b></small>" + "</p>";
		}
		updateError(errors_str);
	} else {
		updateError('Programa correcto!!');
	}
}
var openNewWindow = function() {
	var myWindow = window.open('','','width=1100,height=850');
	var storageScript =  "<script>";
	storageScript += "var storageListener = function(e) {"
	storageScript += "if(e.key == 'program-errors') {";
	storageScript += "document.getElementById('myErrors').innerHTML = localStorage.getItem('program-errors') + '<br/>';"
	storageScript += "}\n}\n";
	storageScript += "window.addEventListener('storage',  storageListener, true);"
	storageScript += "</script>";
	var windowContent = "<div><textarea id='mySource' style='height:800px; width:500px; float:left'></textarea>";
	windowContent += "<div id='myErrors' style='height:800px; width:500px; float:left;'></div></div>";
	windowContent += "<input type='button' value='Save source' onclick=\"localStorage.setItem('program-source', document.getElementById('mySource').value)\" />";
	windowContent += "<input type='button' value='Reset' onclick=\"document.getElementById('mySource').value = ''; document.getElementById('myErrors').innerHTML = ''\" />";
	myWindow.document.write(windowContent);
	myWindow.document.write(storageScript);
	myWindow.focus();
}
var updateError = function(error) {
	var current_date = Date();
	error = current_date.toLocaleString() + "<br/>" + error;
	localStorage.setItem('program-errors', error);
}
window.addEventListener("storage", storageListener, true);
openNewWindow();
*]
